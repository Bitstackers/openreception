* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/*
  Remove all native focus "borders". We handle these ourselves.
*/
*:focus {
  outline: 0 none transparent;
}

#agent-info {
  position: absolute;
  box-shadow: 2px 2px 3px #ccc;
  left: 81%;
  top: 0%;
  height: 6%;
  width: 19%;
}

#agent-info-portrait {
  position: absolute;
  top: 0px;
  height: 100%;
  padding: 5px;
}

#agent-info-portrait-image {
  border: solid 2px #aaa;
  border-radius: 5px;
  height: 100%;
  width: 100%;
}

#agent-info-stats {
  position: relative;
  height: 100%;
  width: 100%;
  border-radius: 5px;
  overflow: hidden;
  font-size: 1.1em;
}

#agent-info-status {
  position: absolute;
  color: white;
  text-shadow:
   -1px -1px 0 #000,
    1px -1px 0 #000,
    -1px 1px 0 #000,
     1px 1px 0 #000;
}

/*
  TODO(TL): Switch to flex and replace calc with 100vh/vw.
*/
#bob-loading,
#bob-disaster,
#bob-active {
  position: absolute;
  height: -moz-calc(100%);
  height: -webkit-calc(100%);
  width: -moz-calc(100%);
  width: -webkit-calc(100%);
  margin: 0 auto;
}

body {
  background-color: #fefefe;
  font-family: 'Open Sans', sans-serif;
  font-size: 1em;
  font-weight: normal;
}

.box-with-header-content {
  overflow: auto;
}

/*
  TODO (TL): Only used by the boxwithheader component. Clean up!
*/
.box-with-header-headline {
  background-color: #dedede;
  color: #444;
  font-weight: bold;
}

/*
  TODO (TL): Only used by the boxwithheader component. Clean up!
*/
.box-with-header-medium {
  font-size: 0.8em;
  padding: 0px 5px 2px 5px;
}

.box-with-header-outer {
  background-color: #fafafa;
  border: solid 2px #ddd;
}

/*
  TODO (TL): Only used once. Better name.
*/
.box-with-header-outer-left {
  background-color: #fafafa;
  border: solid 2px #ddd;
  border-right: none;
  border-radius: 4px  0px 0px 4px;
}

/*
  TODO (TL): Only used once. Better name.
*/
.box-with-header-outer-right {
  background-color: #fafafa;
  border: solid 2px #ddd;
  border-radius: 0px  4px 4px 0px;
}

/*
  TODO (TL): This global button styling seems to general. Class?
*/
button {
  color: white;
  border-radius: 4px;
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
}

/*
  Disables Firefox dotted line on latest clicked button element.
*/
button::-moz-focus-inner {
  border: 0;
}

/*
  TODO (TL): Seems to only be used by the context switcher for click effect.
  Less general selector perhaps?
*/
button:focus {
  background-color: #fff8c4;
  outline: 0.2em solid red;
}

button.cancel {
  background-color: #f5aca6;
}

button.print,
button.save {
  background: rgb(28, 184, 65); /* TODO (TL): HEX ME! this is a green */
}

button.copy,
button.phonenumber,
button.resend,
button.resend-multiple,
button.send {
  background: rgb(66, 184, 221); /* HEX ME! this is a light blue */
}

/*
  Used by view-contact-calendar and view-reception-calendar.
  TODO (TL): Bad name.
*/
.calendar-event-content {
  vertical-align: top;
}

/*
  Used by view-contact-calendar and view-reception-calendar.
  TODO (TL): Bad name. I suppose this is a list item style. Name it accordingly.
*/
.calendar-event-notactive {
  color: #999;
  font-weight: normal;
}

/*
  Used by view-contact-calendar and view-reception-calendar.
  TODO (TL): Bad name. Is for creating/editing events. Name must infer intent!
*/
.calendar-event-table {
  width: 100%;
  border-collapse: collapse;
}

/*
  Used by view-contact-calendar and view-reception-calendar.
  TODO (TL): Bad name once again. Start or end of calendar event?
*/
.calendar-event-timestamp {
  text-align: right;
  vertical-align: top;
  font-weight: bold;
  padding-top: 5px;
}

/*
  Used by view-call.
  TODO (TL): Bad name. Probably also bad selector. Maybe li.call-queue......
*/
.call-queue-item-default {
  height: 30px;
  margin: 5px;
  margin-left: 30px;
  background-color: #fff;
  border-left: 4px solid #7ad03a;
  -webkit-box-shadow: 0 1px 1px 0 rgba(0,0,0,.1);
  box-shadow: 0 1px 1px 0 rgba(0,0,0,.1);
  list-style-image: url("../images/phone20x20.png");
}

/*
  Used by view-call.
  TODO (TL): Bad name. Bad selector.
*/
.call-queue-item-default:hover {
  border-left: 4px solid #333;
  -webkit-box-shadow: 0 1px 1px 0 rgba(0,0,0,.5);
  box-shadow: 0 1px 1px 0 rgba(0,0,0,.5);
  list-style-image: url("../images/phone20x20.png");
}

/*
  Used by view-call.
  TODO (TL): Bad name. Suspect "seconds" refers to time in queue?
*/
.call-queue-item-seconds {
  float: right;
}

#contact-calendar {
  width: 100%;
  height: 100%;
}

#contact-calendar-list {
  height: 100%;
  width: 100%;
  overflow: auto;
  font-size: 0.9em;
}

.contact-data-field {
  min-height: 40px;
  min-width: 300px;
  overflow: auto;
  font-size: small;
}

#contact-data-header {
  top: 180px;
  left: 40.5%;
  width: 100%;
  height: 90%;
}

#contact-selector {
  height: 100%;
  width: 100%;
}

#contact-selector-input {
  width: 100%;
  min-height: 30px;
  border: solid 2px #ccc;
  padding: 3px;
  font-size: 1.1em;
  border-radius: 3px;
}

#contact-selector-list .selected {
  border: 3px solid #67c1f3;
}

#contact-selector-search {
  width: 100%;
}

.contact-selector-search-box {
  width: 100%;
  padding: 10px;
}

/*
  TODO (TL): Phase these out as we move to flex design.
*/
.context {
  position: absolute;
  top: 0%;
  left: 2%;
  height: 100%;
  width: 98%;
}

#context-home-switcher-button {
  background: url(../images/contexthome.svg) no-repeat top left;
  background-size: contain;
}

#context-home-switcher-button.active,
#context-home-switcher-button:hover {
  background: none;
  background: url(../images/contexthome_active.svg) no-repeat top left;
  background-size: contain;
}

#context-homeplus-switcher-button {
  background: url(../images/contexthomeplus.svg) no-repeat top left;
  background-size: contain;
}

#context-homeplus-switcher-button.active,
#context-homeplus-switcher-button:hover {
  background: url(../images/contexthomeplus_active.svg) no-repeat top left;
  background-size: contain;
}

/* Not currently in use in HTML.
#context-log-switcher-button {
  background: url(../images/contextlog.svg) no-repeat top left;
  background-size: contain;
}

#context-log-switcher-button.active,
#context-log-switcher-button:hover {
  background: url(../images/contextlog_active.svg) no-repeat top left;
  background-size: contain;
}*/

#context-messages-switcher-button {
  background: url(../images/contextmessages.svg) no-repeat top left;
  background-size: contain;
}

#context-messages-switcher-button.active,
#context-messages-switcher-button:hover {
  background: url(../images/contextmessages_active.svg) no-repeat top left;
  background-size: contain;
}

/* Not currently in use in HTML.
#context-phone-switcher-button {
  background: url(../images/contextphone.svg) no-repeat top left;
  background-size: contain;
}

#context-phone-switcher-button.active,
#context-phone-switcher-button:hover {
  background: url(../images/contextphone_active.svg) no-repeat top left;
  background-size: contain;
}

#context-statistics-switcher-button {
  background: url(../images/contextstatistics.svg) no-repeat top left;
  background-size: contain;
}

#context-statistics-switcher-button.active,
#context-statistics-switcher-button:hover {
  background: url(../images/contextstatistics_active.svg) no-repeat top left;
  background-size: contain;
}

#context-voicemails-switcher-button {
  background: url(../images/contextvoicemails.svg) no-repeat top left;
  background-size: contain;
}

#context-voicemails-switcher-button.active,
#context-voicemails-switcher-button:hover {
  background: url(../images/contextvoicemails_active.svg) no-repeat top left;
  background-size: contain;
}
*/

#context-switcher {
  top: 0%;
  left: 0%;
  height: 100%;
  width: 1.5%;
  min-width: 30px;
  background-color: #fafafa;
  border-top: solid 2px #ddd;
  border-right: solid 2px #ddd;
  border-bottom: solid 2px #ddd;
  border-radius: 0px 5px 5px 0px;
  list-style-type: none;
}

#context-switcher > li {
  margin: 0px auto;
  width: 70%;
}

#context-switcher > li > button {
  background-size: contain;
  position: relative;
  height: 20px;
  width: 20px;
  border: none;
  margin-top: 10px;
  margin-bottom: 10px;
  cursor: pointer;
}

#context-switcher > li > button > img {
  position: absolute;
  top: 0;
  left: 0;
}

.disabled {
  opacity: 0.5;
  background-color: #ccc;
}

/*
  TODO (TL): Far too generic a name. This is actually a notification error.
  See model-notification.dart. Name it accordingly.
*/
.error {
  background:#ffecec url('../images/error.png') no-repeat 10px 50%;
  border:1px solid #f5aca6;
}

/*
  TODO (TL): Get rid of all fieldset elements/styling.
*/
fieldset {
  border-radius: 4px;
  margin: 0.3em 0;
  padding-bottom: 1.1em;
  margin-top: 0.5%;
}

fieldset ul {
  font-size: 0.8em;
}

fieldset legend {
  font-weight: bold;
  margin-left: 1em;
  background-repeat: no-repeat;
  vertical-align: center;
}

fieldset legend i{
  font-size: 1.1em;
}

fieldset legend span{
  font-size: 0.8em;
}

/*
  TODO (TL): Not a huge fan of dashed border for focus hint.
*/
.focus {
  border: 2px dashed black !important;
}

#global-call-queue {
  height: 20%;
  width: 100%;
}

.hidden {
  visibility: hidden;
  z-index: -100;
}

input:focus {
  background-color: #fff8c4;
  border: solid 2px red;
}

/*
  TODO (TL): Appears to only be in use in message oriented widgets. Class?
*/
input[type="checkbox"] {
  width: 20px;
  height: 20px;
  margin: 0.1em 0.2em 0.1em 0.2em;
  vertical-align:middle;
}

/*
  TODO (TL): Perhaps these are a bit to general? Move to class?
*/
input,
textarea {
  border: solid 2px #ccc;
  border-radius: 4px;
  font-size: 0.8em;
  font-weight: bold;
  padding: 1%;
}

legend span {
  margin-left: 0.5em;
  margin-right: 0.5em;
}

/*
  Used by view-call-list
*/
li.call.enqueued {
  background-color: #ffeeee;
  list-style-image: url("../images/queue-icon-20x20.png");
}

/*
  Used by view-call
*/
li.call.destroyed {
  opacity : 0.8;
  background-color: #ffecec;
  list-style-image: url("../images/destroyed-icon-20x20.gif");
}

/*
  Used by view-call-list
*/
li.call.locked {
  opacity : 0.3;
  background-color: #fff8c4;
  list-style-image: url("../images/locked-icon-20x20.png");
}

/*
  Used by view-call and view-call-list
*/
li.call.parked {
  opacity : 0.7;
  background-color: #e3f7fc;
  list-style-image: url("../images/parked-icon-20x20.png");
}

/*
  Used by view-call and view-call-list
*/
li.call.speaking {
  opacity : 1.0;
  background-color: #e9ffd9;
  list-style-image: url("../images/speaking-icon-20x20.png");
}

/*
  TODO (TL): Graphics for this?
*/
li.email-recipient-role-to {
  list-style-image: url('../images/email-role-to-icon-16x16.png');
}

li.email-recipient-role-cc {
  list-style-image: url('../images/email-role-cc-icon-16x16.png');
}

li.email-recipient-role-bcc {
  list-style-image: url('../images/email-role-bcc-icon-16x16.png');
}

/*
  Used by #bob-loading and #bob-disaster
  TODO (TL): Bad name. Too generic.
*/
.loading-big {
  display: block;
  width: 222px;
  height: 222px;
  margin: 10% auto;
  filter: alpha(opacity=80);
}

/*
  Used by #bob-loading and #bob-disaster
  TODO (TL): Bad name. Overlay infers that something is below, which in our case
  matters zero. Either we're up or we're in load-/failstate.
*/
.loading-overlay {
  width:100%;
  background: #000;
  opacity: 0.8;
  filter: alpha(opacity=80);
}

/*
  The table element is currently created in view-log-box.
  TODO (TL): Bad name. As pointed out by KRC, we don't really "log" as such. We
  record events.
*/
#log-box table {
  width: 100%;
}

/*
  Used by the log-box widget.
  TODO (TL): See "#log-box table". This needs a different name.
*/
.log-box-time-header {
  width: 8%;
}

/*
  Used by the log-box widget.
  TODO (TL): See "#log-box table". This needs a different name.
*/
.log-box-level-header {
  width: 4%;
}

/*
  Used by the log-box widget.
  TODO (TL): See "#log-box table". This needs a different name.
*/
.log-box-message-header {
  text-align:left;
}

/*
  Used by the log-box widget.
  TODO (TL): See "#log-box table". This needs a different name.
*/
.log-box-row:nth-of-type(even) {
  background-color: #eee;
}

/*
  TODO (TL): The HTML is a mess when it comes to message compose widgets.
  Clean up!
*/
.message-compose input,
.message-compose textarea {
  margin: 1%;
}

.message-compose input.company,
.message-compose input.name {
  width: 47.5%;
}

.message-compose input.cellphone,
.message-compose input.local-extension,
.message-compose input.phone {
  width: 30.6666666%;
}

.message-compose textarea {
  width: 98%;
}

#message-overview {
  height: 99%;
  width: 100%;
  overflow: auto
}

#message-overview > table {
  font-size: 0.8em;
  width: 100%;
  display:block;
  overflow: auto;
}

#message-overview > table > thead {
  background-color: #ddd;
}

#message-overview > table tr {
  outline: 0.1em solid transparent;
  height: 3.2em;
}

#message-overview > table tr.selected {
  outline: 0.1em solid #67c1f3;
}

#message-overview > table tr.selected td {
  background-color:rgba(67,193,243,0.2) !important;
}

#message-overview-header-agent {
  width: 15%;
}

#message-overview-header-caller {
  width: 40%;
}

#message-overview-header-checkbox {
  width: 2%;
}

#message-overview-header-context {
  width: 20%;
}

#message-overview-header-status {
  width: 10%;
}

#message-overview-header-timestamp {
  width: 13%;
}

#message-search {
  height: 30%;
  width: 100%;
  overflow: auto
}

/*
  This was/is part of the old "Box" model.
  TODO (TL): Get rid of this crap.
*/
.no-chrome {
  background-color: #fafafa;
  border: solid 2px #ddd;
  overflow: auto;
}

/*
  TODO (TL): Far too generic a name. This is actually a notification notice.
  See model-notification.dart. Name it accordingly.
*/
.notice {
  background:#e3f7fc url('../images/notice.png') no-repeat 10px 50%;
  border:1px solid #8ed9f6;
}

#notifications {
  width: 30%;
  z-index: 9999;
  position: absolute;
  margin: 0% 35%;
}

#notifications > h4 {
  font-size:0.8em;
  padding:10px 36px;
  margin:10px;
  color:#555;
  border-radius: 4px;
  font-weight:bold;
}

.nudge {
  font-size: 0.7em;
  font-weight:bold;
  border:1px solid grey;
  border-radius: 4px;
  padding : 3px;
  position:absolute;
}

.nudge.navigation {
  background-color: rgba(255,255,0,0.9); /* TODO (TL): HEX ME!*/
}

.nudge.command {
  background-color: rgba(0,255,0,0.9); /* TODO (TL): HEX ME!*/
}

/*
  TODO (TL): As with .loading-big and .loading-overlay, this name is just plain
  wrong for what it actually does.
*/
.overlay-notification {
  color: white;
  font-size: 1.8em;
  line-height: 2.0em;
  text-align : center;
  margin-top: 20px;
}

#reception-addresses-list {
  height: 100%;
  width: 100%;
  overflow: auto;
  font-size: 0.8em;
  list-style-type: none;
}

#reception-alternate-names {
  height: 25%;
  width: 100%;
  overflow: auto;
}

/*
  TODO (TL): Overly generic name.
*/
.selected {
  outline: 0.1em solid #67c1f3;
}

/*
  TODO (TL): Far too generic a name. This is actually a notification success.
  See model-notification.dart. Name it accordingly.
*/
.success {
  background:#e9ffd9 url('../images/success.png') no-repeat 10px 50%;
  border:1px solid #a6ca8a;
}

textarea {
   resize: none;
}

textarea:focus {
  background-color: #fff8c4;
  border: solid 2px red;
}

/*
  TODO (TL): Overly generic name.
*/
textarea.loading {
  background: url(../images/loader-small.gif) no-repeat 50% 50%;
}

/*
  TODO (TL): This is actually a message-compose related selector. Fix it.
*/
textarea.message-body {
  height: 30%;
  font-size: 0.9em;
}

/*
  TODO (TL): Far too generic a name. This is actually a notification warning.
  See model-notification.dart. Name it accordingly.
*/
.warning {
  background:#fff8c4 url('../images/warning.png') no-repeat 10px 50%;
  border:1px solid #f2c779;
}

.zebra li {
  padding: 5px;
}

.zebra li:nth-of-type(even) {
  background-color: rgba(0,0,0,0.1); /* TODO(TL): HEX ME! Or use opacity instead */
}
