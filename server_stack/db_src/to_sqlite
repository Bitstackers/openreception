#! /bin/bash
#-----------------------------------------------------------------------------
#--  Source and target file:

if [ $# = 1 -a -r "$1" ]; then
   source="$1"
   target="$(dirname "${source}")/sqlite/$(basename "${source}")"
else
   echo "Usage:"                 1>&2
   echo "  $0 <source_sql_file>" 1>&2
   exit 1
fi

#-----------------------------------------------------------------------------
#--  Simple substitutions:

perl -lpe 's/\bTRUE\b/1/g;
           s/\bFALSE\b/0/g;
           s/\b(TIME)\b(.*)$/INTEGER$2 --  Time of day in seconds/g;
           s/\b(XML|JSON|TIMESTAMP)\b/TEXT/g;
           s/, -- +AUTOINCREMENT *$/ AUTOINCREMENT,/;' \
     "${source}" \
  > "${target}"

#-----------------------------------------------------------------------------
#--  Remove ALTER TABLE on organization_contacts:

buffer="$(mktemp)"

grep -B4 -A4 'ALTER TABLE organization_contacts' "${target}" \
  | diff - "${target}" \
  | grep '^> ' \
  | cut -c3- \
  | perl -lpe 's/^( *distribution_list_id) .*$/$1 INTEGER REFERENCES distribution_lists (id) ON UPDATE CASCADE ON DELETE CASCADE,/;' \
  > "${buffer}"

mv "${buffer}" "${target}"

#-----------------------------------------------------------------------------
#--  Primary key indices:

if grep -q 'CREATE TABLE' "${source}"; then
   cat >> "${target}" << HEAD
--  Primary key indices:

HEAD

   normalised="$(mktemp)"

   perl -lpe 's/--.*$//;' "${source}" \
     | tr '\n' ' ' \
     | perl -lpe 's/; +/;/g; s/;/;\n/g; s/^ +//; s/  +/ /g;' \
     > "${normalised}"

   for table in $(grep 'CREATE TABLE' "${normalised}" | cut -d' ' -f3); do
      if egrep -q "^CREATE TABLE ${table} .+PRIMARY KEY *[,)]" "${normalised}"; then
         key="$(egrep "^CREATE TABLE ${table} " "${normalised}" | perl -lpe 's/^.+[(,] *([^, ]+) .+ PRIMARY KEY.+$/$1/')"

         echo "CREATE INDEX ${table}_primary_key ON ${table} (${key});" \
           >> "${target}"
      elif egrep -q "^CREATE TABLE ${table} .+PRIMARY KEY *[(]" "${normalised}"; then
         key="$(egrep "^CREATE TABLE ${table} " "${normalised}" | perl -lpe 's/^.+PRIMARY KEY *[(]([^)]+)[)].+$/$1/')"

         echo "CREATE INDEX ${table}_primary_key ON ${table} (${key});" \
           >> "${target}"
      else
         echo Table ${table} has no primary key. 1>&2
      fi
   done

   rm -f "${normalised}"

   cat >> "${target}" << TAIL

-------------------------------------------------------------------------------
TAIL

fi

#-----------------------------------------------------------------------------
