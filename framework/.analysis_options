analyzer:
  exclude:
    - .pub-cache/
  strong-mode: true

linter:
  rules:
    # Avoid empty else statements.
    - avoid_empty_else

    # Cancel instances of dart.async.StreamSubscription.
    - cancel_subscriptions

    # Close instances of dart.core.Sink.
    - close_sinks

    # Only reference in scope identifiers in doc comments.
    - comment_references

    # Avoid control flow in finally block.
    - control_flow_in_finally

    # Avoid empty statements.
    - empty_statements

    # Always override hashCode if overriding ==
    - hash_and_equals

    # Invocation of Iterable<E>.contains with references of unrelated types.
    - iterable_contains_unrelated_type

    # Test type arguments in operator ==(Object other).
    - test_types_in_equals

    # Avoid throw in finally block.
    - throw_in_finally

    # Equality operator (==) invocation with references of unrelated types.
    - unrelated_type_equality_checks

    # Name types using UpperCamelCase.
    - camel_case_types

    # Prefer using lowerCamelCase for constant names.
    - constant_identifier_names

    # Use ; instead of {} for empty constructor bodies.
    - empty_constructor_bodies

    # Name libraries and source files using lowercase_with_underscores.
    - library_names

    # Name non-constant identifiers using lowerCamelCase.
    - non_constant_identifier_names

    # Don't explicitly initialize variables to null
    - avoid_init_to_null

    # Overridden members must be annotated
    - annotate_overrides

    # Declare method return types.
    - always_declare_return_types

    # Specify type annotations.
    - always_specify_types

    # Avoid using as.
    # - avoid_as

    # Avoid return types on setters.
    - avoid_return_types_on_setters

    # Await only futures.
    - await_only_futures

    # Don't import implementation files from another package.
    - implementation_imports

    # Avoid defining a one-member abstract class when a simple function will do.
    - one_member_abstracts

    # Only throw instances of classes extending either Exception or Error
    - only_throw_errors

    # Do not override fields.
    - overridden_fields

    # Provide doc comments for all public APIs
    - package_api_docs

    # Prefix library names with the package name and a dot-separated path.
    - package_prefixed_library_names

    # Use isNotEmpty for Iterables and Maps.
    - prefer_is_not_empty

    # Document all public members
    #- public_member_api_docs

    # Prefer to use /// for doc comments
    - slash_for_doc_comments

    # Sort constructor declarations before method declarations.
    - sort_constructors_first

    # Sort unnamed constructor declarations first
    - sort_unnamed_constructors_first

    # Place the super() call last in a constructor initialization list.
    - super_goes_last

    # Type annotate public APIs.
    - type_annotate_public_apis

    # Don't type annotate initializing formals.
    #- type_init_formals

    # Await for future expression statements inside async function bodies.
    - unawaited_futures

    # Avoid using braces in interpolation when not needed.
    - unnecessary_brace_in_string_interp

    # Avoid wrapping fields in getters and setters just to be "safe".
    - unnecessary_getters_setters

    #Use lowercase_with_underscores for package names.
    - package_names
